{
  "name": "iPhone Programming Tutorial: Creating An Image Gallery Like Over \u0026#8211; Part 2",  
  "content": "[\u003cimg class=\"alignright\" alt=\"Screen Shot 2013-08-09 at 8.36.42 PM\" src=\"/uploads/2013/Screen-Shot-2013-08-09-at-8.36.42-PM.png\" width=\"225\" height=\"365\" /\u003e][1]\n\n\u0026nbsp;\n\nWelcome to the second part of my tutorial series \u0026#8220;**Creating An Image Gallery Like Over\u0026#8221;.**  In this part of the tutorial, you will learn how to actually display the photos in the UICollectionView as well as give the user the ability to take photos with their camera.\n\nIf you haven\u0026#8217;t already done so, please go back and[ complete part 1][2].\n\n### 1. Custom UICollectionViewCell\n\nStart by creating a new subclass of **UICollectionViewCell** and naming it **PhotoCell.  **Now, open up PhotoCell.h and add the following code:\n\n\u003cdiv class=\"wp_syntax\"\u003e\n  \u003ctable\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"code\"\u003e\n        \u003cpre class=\"objc\" style=\"font-family:monospace;\"\u003e\u003cspan style=\"color: #6e371a;\"\u003e#import \u0026lt;AssetsLibrary/AssetsLibrary.h\u0026gt;\u003c/span\u003e\n\u0026nbsp;\n\u003cspan style=\"color: #a61390;\"\u003e@interface\u003c/span\u003e PhotoCell \u003cspan style=\"color: #002200;\"\u003e:\u003c/span\u003e UICollectionViewCell\n\u003cspan style=\"color: #a61390;\"\u003e@property\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#40;\u003c/span\u003enonatomic, strong\u003cspan style=\"color: #002200;\"\u003e\u0026#41;\u003c/span\u003e ALAsset \u003cspan style=\"color: #002200;\"\u003e*\u003c/span\u003easset;\n\u003cspan style=\"color: #a61390;\"\u003e@end\u003c/span\u003e\u003c/pre\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/table\u003e\n\u003c/div\u003e\n\nNow, open PhotoCell.m and add the following code:\n\n\u003cdiv class=\"wp_syntax\"\u003e\n  \u003ctable\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"code\"\u003e\n        \u003cpre class=\"objc\" style=\"font-family:monospace;\"\u003e\u003cspan style=\"color: #6e371a;\"\u003e#import \"PhotoCell.h\"\u003c/span\u003e\n\u0026nbsp;\n\u003cspan style=\"color: #a61390;\"\u003e@interface\u003c/span\u003e PhotoCell \u003cspan style=\"color: #002200;\"\u003e\u0026#40;\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#41;\u003c/span\u003e\n\u003cspan style=\"color: #11740a; font-style: italic;\"\u003e// 1\u003c/span\u003e\n\u003cspan style=\"color: #a61390;\"\u003e@property\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#40;\u003c/span\u003enonatomic, weak\u003cspan style=\"color: #002200;\"\u003e\u0026#41;\u003c/span\u003e IBOutlet UIImageView \u003cspan style=\"color: #002200;\"\u003e*\u003c/span\u003ephotoImageView;\n\u003cspan style=\"color: #a61390;\"\u003e@end\u003c/span\u003e\n\u0026nbsp;\n\u003cspan style=\"color: #a61390;\"\u003e@implementation\u003c/span\u003e PhotoCell\n\u003cspan style=\"color: #002200;\"\u003e-\u003c/span\u003e \u003cspan style=\"color: #002200;\"\u003e\u0026#40;\u003c/span\u003e\u003cspan style=\"color: #a61390;\"\u003evoid\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#41;\u003c/span\u003e setAsset\u003cspan style=\"color: #002200;\"\u003e:\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#40;\u003c/span\u003eALAsset \u003cspan style=\"color: #002200;\"\u003e*\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#41;\u003c/span\u003easset\n\u003cspan style=\"color: #002200;\"\u003e\u0026#123;\u003c/span\u003e\n    \u003cspan style=\"color: #11740a; font-style: italic;\"\u003e// 2\u003c/span\u003e\n    _asset \u003cspan style=\"color: #002200;\"\u003e=\u003c/span\u003e asset;\n    self.photoImageView.image \u003cspan style=\"color: #002200;\"\u003e=\u003c/span\u003e \u003cspan style=\"color: #002200;\"\u003e\u0026#91;\u003c/span\u003eUIImage imageWithCGImage\u003cspan style=\"color: #002200;\"\u003e:\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#91;\u003c/span\u003easset thumbnail\u003cspan style=\"color: #002200;\"\u003e\u0026#93;\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#93;\u003c/span\u003e;\n\u003cspan style=\"color: #002200;\"\u003e\u0026#125;\u003c/span\u003e\n\u003cspan style=\"color: #a61390;\"\u003e@end\u003c/span\u003e\u003c/pre\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/table\u003e\n\u003c/div\u003e\n\n  1. This is an **IBOutlet **to a **UIImageView** that we will create inside of the Storyboard\n  2. We overwrite the setter method for the asset in order to convert the asset\u0026#8217;s thumbnail into a UIImage and set it to the contents of the UIImageView\n\nNow that we have the custom cell created, we need to hook it up and create the UIImageView inside of Storyboard.  Open **MainStoryboard.storyboard **and click on the default **UICollectionViewCell** inside of your **UICollectionView.**\n\nIt might be tricky to see the cell as it has a white background and blends in, but it\u0026#8217;s there.\n\n[\u003cimg alt=\"Screen Shot 2013-07-24 at 6.43.38 PM\" src=\"/uploads/2013/Screen-Shot-2013-07-24-at-6.43.38-PM-300x281.png\" width=\"300\" height=\"281\" /\u003e][3]\n\nNow, click on the **Identity Inspector** from the right side bar and change the class to **PhotoCell.**  This will inform interface builder that this object is of the type PhotoCell and let us hook up the photoImageView outlet.\n\n[\u003cimg alt=\"Screen Shot 2013-07-24 at 6.46.35 PM\" src=\"/uploads/2013/Screen-Shot-2013-07-24-at-6.46.35-PM.png\" width=\"260\" height=\"70\" /\u003e][4]\n\nNext, open the size inspector, change the size to **Custom, **the width to **104 **and the height to **104.**  This will give us nice sized images, with a good amount of padding between them.\n\n[\u003cimg alt=\"Screen Shot 2013-07-24 at 6.49.51 PM\" src=\"/uploads/2013/Screen-Shot-2013-07-24-at-6.49.51-PM.png\" width=\"260\" height=\"105\" /\u003e][5]\n\nThe **UICollectionView** will overwrite these sizes, so we need to change it in one other location.  To ensure that the cells stay the correct size, click on the **Collection View** in left side bar and open it\u0026#8217;s **Size Inspector**.  Then set the **Cell Size** width and height to 104.\n\n[\u003cimg alt=\"Screen Shot 2013-07-24 at 7.07.14 PM\" src=\"/uploads/2013/Screen-Shot-2013-07-24-at-7.07.14-PM.png\" width=\"260\" height=\"81\" /\u003e][6]\n\nThe final step here is to drag a **UIImageView** on to your cell (scaling it to fit the entire cell size), and hook up the **IBOutlet** to the photoImageView. Do this by control-click and dragging from Photo Cell to the ImageView and selecting **photoImageView**.\n\n[\u003cimg alt=\"Screen Shot 2013-07-24 at 6.52.32 PM\" src=\"/uploads/2013/Screen-Shot-2013-07-24-at-6.52.32-PM-300x147.png\" width=\"300\" height=\"147\" /\u003e][7]\n\nIf you build and run at this stage, nothing will be different.  That\u0026#8217;s because we still need to tell the ViewController class about our new **PhotoCell**.  Open **ViewController.m **and import **PhotoCell.h**.\n\n\u003cdiv class=\"wp_syntax\"\u003e\n  \u003ctable\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"code\"\u003e\n        \u003cpre class=\"objc\" style=\"font-family:monospace;\"\u003e\u003cspan style=\"color: #6e371a;\"\u003e#import \"PhotoCell.h\"\u003c/span\u003e\u003c/pre\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/table\u003e\n\u003c/div\u003e\n\nNow, head down to the **collectionView:cellForItemAtIndexPath** method and replace the contents of it with the following code:\n\n\u003cdiv class=\"wp_syntax\"\u003e\n  \u003ctable\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"code\"\u003e\n        \u003cpre class=\"objc\" style=\"font-family:monospace;\"\u003e\u003cspan style=\"color: #002200;\"\u003e-\u003c/span\u003e \u003cspan style=\"color: #002200;\"\u003e\u0026#40;\u003c/span\u003eUICollectionViewCell \u003cspan style=\"color: #002200;\"\u003e*\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#41;\u003c/span\u003e collectionView\u003cspan style=\"color: #002200;\"\u003e:\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#40;\u003c/span\u003eUICollectionView \u003cspan style=\"color: #002200;\"\u003e*\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#41;\u003c/span\u003ecollectionView cellForItemAtIndexPath\u003cspan style=\"color: #002200;\"\u003e:\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#40;\u003c/span\u003e\u003cspan style=\"color: #400080;\"\u003eNSIndexPath\u003c/span\u003e \u003cspan style=\"color: #002200;\"\u003e*\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#41;\u003c/span\u003eindexPath\n\u003cspan style=\"color: #002200;\"\u003e\u0026#123;\u003c/span\u003e\n    PhotoCell \u003cspan style=\"color: #002200;\"\u003e*\u003c/span\u003ecell \u003cspan style=\"color: #002200;\"\u003e=\u003c/span\u003e \u003cspan style=\"color: #002200;\"\u003e\u0026#40;\u003c/span\u003ePhotoCell \u003cspan style=\"color: #002200;\"\u003e*\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#41;\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#91;\u003c/span\u003ecollectionView dequeueReusableCellWithReuseIdentifier\u003cspan style=\"color: #002200;\"\u003e:\u003c/span\u003e\u003cspan style=\"color: #bf1d1a;\"\u003e@\u003c/span\u003e\u003cspan style=\"color: #bf1d1a;\"\u003e\"PhotoCell\"\u003c/span\u003e forIndexPath\u003cspan style=\"color: #002200;\"\u003e:\u003c/span\u003eindexPath\u003cspan style=\"color: #002200;\"\u003e\u0026#93;\u003c/span\u003e;\n\u0026nbsp;\n    ALAsset \u003cspan style=\"color: #002200;\"\u003e*\u003c/span\u003easset \u003cspan style=\"color: #002200;\"\u003e=\u003c/span\u003e self.assets\u003cspan style=\"color: #002200;\"\u003e\u0026#91;\u003c/span\u003eindexPath.row\u003cspan style=\"color: #002200;\"\u003e\u0026#93;\u003c/span\u003e;\n    cell.asset \u003cspan style=\"color: #002200;\"\u003e=\u003c/span\u003e asset;\n    cell.backgroundColor \u003cspan style=\"color: #002200;\"\u003e=\u003c/span\u003e \u003cspan style=\"color: #002200;\"\u003e\u0026#91;\u003c/span\u003eUIColor redColor\u003cspan style=\"color: #002200;\"\u003e\u0026#93;\u003c/span\u003e;\n\u0026nbsp;\n    \u003cspan style=\"color: #a61390;\"\u003ereturn\u003c/span\u003e cell;\n\u003cspan style=\"color: #002200;\"\u003e\u0026#125;\u003c/span\u003e\u003c/pre\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/table\u003e\n\u003c/div\u003e\n\nWhat\u0026#8217;s changed here is, we are now telling the **UICollectionView** that the cell it\u0026#8217;s returning is of the type **PhotoCell**. Also, we are fetching the **ALAsset** out of our array at each index and sending it to the cell so that it can display it\u0026#8217;s thumbnail.\n\n**Build And Run!**\n\n[\u003cimg alt=\"Screen Shot 2013-07-24 at 7.10.39 PM\" src=\"/uploads/2013/Screen-Shot-2013-07-24-at-7.10.39-PM-184x300.png\" width=\"184\" height=\"300\" /\u003e][8]\n\nWhoohoo**! **You should now see your photos populating the **UICollectionView. Congratulations! \u003c/p\u003e \n\n\u003c/strong\u003eWhile, this is definitely cool, you might now be wondering \u0026#8220;how do I select a photo?\u0026#8221;.  Great question, and here is the solution.\n\n### 2. Selecting Photos\n\nNow that you have all of the groundwork in place, selecting photos from the collection could not be easier.  Open up **ViewController.m** and replace the **collectionView:didSelectItemAtIndexPath **method with the following code:\n\n\u003cdiv class=\"wp_syntax\"\u003e\n  \u003ctable\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"code\"\u003e\n        \u003cpre class=\"objc\" style=\"font-family:monospace;\"\u003e\u003cspan style=\"color: #002200;\"\u003e-\u003c/span\u003e \u003cspan style=\"color: #002200;\"\u003e\u0026#40;\u003c/span\u003e\u003cspan style=\"color: #a61390;\"\u003evoid\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#41;\u003c/span\u003e collectionView\u003cspan style=\"color: #002200;\"\u003e:\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#40;\u003c/span\u003eUICollectionView \u003cspan style=\"color: #002200;\"\u003e*\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#41;\u003c/span\u003ecollectionView didSelectItemAtIndexPath\u003cspan style=\"color: #002200;\"\u003e:\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#40;\u003c/span\u003e\u003cspan style=\"color: #400080;\"\u003eNSIndexPath\u003c/span\u003e \u003cspan style=\"color: #002200;\"\u003e*\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#41;\u003c/span\u003eindexPath\n\u003cspan style=\"color: #002200;\"\u003e\u0026#123;\u003c/span\u003e\n    ALAsset \u003cspan style=\"color: #002200;\"\u003e*\u003c/span\u003easset \u003cspan style=\"color: #002200;\"\u003e=\u003c/span\u003e self.assets\u003cspan style=\"color: #002200;\"\u003e\u0026#91;\u003c/span\u003eindexPath.row\u003cspan style=\"color: #002200;\"\u003e\u0026#93;\u003c/span\u003e;\n    ALAssetRepresentation \u003cspan style=\"color: #002200;\"\u003e*\u003c/span\u003edefaultRep \u003cspan style=\"color: #002200;\"\u003e=\u003c/span\u003e \u003cspan style=\"color: #002200;\"\u003e\u0026#91;\u003c/span\u003easset defaultRepresentation\u003cspan style=\"color: #002200;\"\u003e\u0026#93;\u003c/span\u003e;\n    UIImage \u003cspan style=\"color: #002200;\"\u003e*\u003c/span\u003eimage \u003cspan style=\"color: #002200;\"\u003e=\u003c/span\u003e \u003cspan style=\"color: #002200;\"\u003e\u0026#91;\u003c/span\u003eUIImage imageWithCGImage\u003cspan style=\"color: #002200;\"\u003e:\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#91;\u003c/span\u003edefaultRep fullScreenImage\u003cspan style=\"color: #002200;\"\u003e\u0026#93;\u003c/span\u003e scale\u003cspan style=\"color: #002200;\"\u003e:\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#91;\u003c/span\u003edefaultRep scale\u003cspan style=\"color: #002200;\"\u003e\u0026#93;\u003c/span\u003e orientation\u003cspan style=\"color: #002200;\"\u003e:\u003c/span\u003e\u003cspan style=\"color: #2400d9;\"\u003e\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#93;\u003c/span\u003e;\n    \u003cspan style=\"color: #11740a; font-style: italic;\"\u003e// Do something with the image\u003c/span\u003e\n\u003cspan style=\"color: #002200;\"\u003e\u0026#125;\u003c/span\u003e\u003c/pre\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/table\u003e\n\u003c/div\u003e\n\nThis will get the selected asset and convert it to a UIImage. You are now free to use the UIImage how you want. Perhaps you create a protocol for this class and make a callback to a delegate OR maybe you add this to a UINavigationController stack and push a new view controller on to the stack containing this image. The sky is the limit!\n\nIf you look at the Over app and back to your image gallery that you just created, you will notice something is still missing.  What if the user wants to take a photo or access other albums?  This is where Over adds a bar across the top of the interface with 2 buttons that fall back to the \u0026#8220;default\u0026#8221; style of fetching images if the user wants to take a photo or access a different photo album.  Let\u0026#8217;s build this out now.\n\n### 3. Building The Interface To Take Photos And Access Albums\n\nStart by setting up the **IBActions** for theses buttons.  Open **ViewController.m** and add the following empty methods:\n\n\u003cdiv class=\"wp_syntax\"\u003e\n  \u003ctable\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"code\"\u003e\n        \u003cpre class=\"objc\" style=\"font-family:monospace;\"\u003e\u003cspan style=\"color: #6e371a;\"\u003e#pragma mark - Actions\u003c/span\u003e\n\u0026nbsp;\n\u003cspan style=\"color: #002200;\"\u003e-\u003c/span\u003e \u003cspan style=\"color: #002200;\"\u003e\u0026#40;\u003c/span\u003eIBAction\u003cspan style=\"color: #002200;\"\u003e\u0026#41;\u003c/span\u003etakePhotoButtonTapped\u003cspan style=\"color: #002200;\"\u003e:\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#40;\u003c/span\u003e\u003cspan style=\"color: #a61390;\"\u003eid\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#41;\u003c/span\u003esender\n\u003cspan style=\"color: #002200;\"\u003e\u0026#123;\u003c/span\u003e\n\u0026nbsp;\n\u003cspan style=\"color: #002200;\"\u003e\u0026#125;\u003c/span\u003e\n\u0026nbsp;\n\u003cspan style=\"color: #002200;\"\u003e-\u003c/span\u003e \u003cspan style=\"color: #002200;\"\u003e\u0026#40;\u003c/span\u003eIBAction\u003cspan style=\"color: #002200;\"\u003e\u0026#41;\u003c/span\u003ealbumsButtonTapped\u003cspan style=\"color: #002200;\"\u003e:\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#40;\u003c/span\u003e\u003cspan style=\"color: #a61390;\"\u003eid\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#41;\u003c/span\u003esender\n\u003cspan style=\"color: #002200;\"\u003e\u0026#123;\u003c/span\u003e\n\u0026nbsp;\n\u003cspan style=\"color: #002200;\"\u003e\u0026#125;\u003c/span\u003e\u003c/pre\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/table\u003e\n\u003c/div\u003e\n\nWe don\u0026#8217;t need to add the code yet since we still need to build the UI and hook up the **IBOutlets**. Now open **MainStoryboard.storyboard **and drag a **UIView **right on top of your **UIView.**\n\nOne issue you might run in to here is the view will want to become a subview of the collection view.  To combat this, drag the view outside of the collection view inside the left bar so the hierarchy will look like this:\n\n[\u003cimg alt=\"Screen Shot 2013-07-25 at 12.35.06 PM\" src=\"/uploads/2013/Screen-Shot-2013-07-25-at-12.35.06-PM.png\" width=\"265\" height=\"162\" /\u003e][9]\n\n\u0026nbsp;\n\nOne other \u0026#8220;gotcha\u0026#8221; is, you must ensure that the view is positioned **below** the collection view in this list, otherwise it won\u0026#8217;t show above it on screen.\n\nNow, let\u0026#8217;s manually size and position the view as Interface Building will make things hard on us if we want to position it over our collection view.\n\nSelect the view and open the **Size Inspector.** Set the values as follows:\n\n[\u003cimg alt=\"Screen Shot 2013-07-25 at 12.44.23 PM\" src=\"/uploads/2013/Screen-Shot-2013-07-25-at-12.44.23-PM.png\" width=\"260\" height=\"168\" /\u003e][10]\n\n\u0026nbsp;\n\nAgain, remember this positioning is optimized for the iPhone 5. So make sure you are testing with that simulator or you won\u0026#8217;t see this bar.\n\nAfter this, the bar still won\u0026#8217;t be visible inside of Interface Builder.  We need to set the background color to black with some transparency.  Open the **Attributes Inspector** and click on the background color.  Then set the color to black with 80% opacity:\n\n[\u003cimg alt=\"Screen Shot 2013-07-25 at 12.40.13 PM\" src=\"/uploads/2013/Screen-Shot-2013-07-25-at-12.40.13-PM-177x300.png\" width=\"177\" height=\"300\" /\u003e][11]\n\n\u0026nbsp;\n\nYou should now see the bar positioned on the screen like this:\n\n[\u003cimg alt=\"Screen Shot 2013-07-25 at 12.41.54 PM\" src=\"/uploads/2013/Screen-Shot-2013-07-25-at-12.41.54-PM-154x300.png\" width=\"154\" height=\"300\" /\u003e][12]\n\n\u0026nbsp;\n\nNow drag a **UIButton **on to the view you just created. There are a few things that must be done to style the button:\n\n  1. Position it at 0,0\n  2. Set the width to 160px and the height to 70x\n  3. Change the type to custom\n  4. Change the text to \u0026#8220;Take Photo\u0026#8221;\n  5. Change the font to \u0026#8220;Helvetica Neue Condensed Black\u0026#8221; size 20\n  6. Set the text color to white\n\nWhen you have completed these steps, the button should look like this:\n\n[\u003cimg alt=\"Screen Shot 2013-07-25 at 12.47.26 PM\" src=\"/uploads/2013/Screen-Shot-2013-07-25-at-12.47.26-PM-300x213.png\" width=\"300\" height=\"213\" /\u003e][13]\n\n\u0026nbsp;\n\nNow, hook up the **IBAction **by opening the **Connections Inspector** and dragging from **Touch Up Inside** to the **View Controller** object and selecting t**akePhotoButtonTapped:**\n\nFinally, duplicate this button (copy and paste), rename the title to \u0026#8220;Albums\u0026#8221;, move it next to the \u0026#8220;Take Photo\u0026#8221; button and hook its **Touch Up Inside** to **albumsButtonTapped:**\n\nThe final Interface should look like this:\n\n[\u003cimg alt=\"Screen Shot 2013-07-25 at 12.51.25 PM\" src=\"/uploads/2013/Screen-Shot-2013-07-25-at-12.51.25-PM-300x221.png\" width=\"300\" height=\"221\" /\u003e][14]\n\n\u0026nbsp;\n\nGo ahead and do a **Build and Run** and this stage and marvel at your interface development prowess!\n\n### 4. Actually Taking Photos And Accessing Albums\n\nThe final step for this tutorial is to implement the code to bring up the camera as well as bring up the photo albums.  Let\u0026#8217;s start with the camera.  Open **ViewController.m** and add the following code to the **takePhotosButtonTapped:** method:\n\n\u003cdiv class=\"wp_syntax\"\u003e\n  \u003ctable\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"code\"\u003e\n        \u003cpre class=\"objc\" style=\"font-family:monospace;\"\u003e\u003cspan style=\"color: #002200;\"\u003e-\u003c/span\u003e \u003cspan style=\"color: #002200;\"\u003e\u0026#40;\u003c/span\u003eIBAction\u003cspan style=\"color: #002200;\"\u003e\u0026#41;\u003c/span\u003etakePhotoButtonTapped\u003cspan style=\"color: #002200;\"\u003e:\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#40;\u003c/span\u003e\u003cspan style=\"color: #a61390;\"\u003eid\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#41;\u003c/span\u003esender\n\u003cspan style=\"color: #002200;\"\u003e\u0026#123;\u003c/span\u003e\n    \u003cspan style=\"color: #a61390;\"\u003eif\u003c/span\u003e \u003cspan style=\"color: #002200;\"\u003e\u0026#40;\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#40;\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#91;\u003c/span\u003eUIImagePickerController isSourceTypeAvailable\u003cspan style=\"color: #002200;\"\u003e:\u003c/span\u003e\n          UIImagePickerControllerSourceTypeCamera\u003cspan style=\"color: #002200;\"\u003e\u0026#93;\u003c/span\u003e \u003cspan style=\"color: #002200;\"\u003e==\u003c/span\u003e \u003cspan style=\"color: #a61390;\"\u003eNO\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#41;\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#41;\u003c/span\u003e\n        \u003cspan style=\"color: #a61390;\"\u003ereturn\u003c/span\u003e; \u003cspan style=\"color: #11740a; font-style: italic;\"\u003e// 1\u003c/span\u003e\n\u0026nbsp;\n    \u003cspan style=\"color: #11740a; font-style: italic;\"\u003e// 2\u003c/span\u003e\n    UIImagePickerController \u003cspan style=\"color: #002200;\"\u003e*\u003c/span\u003emediaUI \u003cspan style=\"color: #002200;\"\u003e=\u003c/span\u003e \u003cspan style=\"color: #002200;\"\u003e\u0026#91;\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#91;\u003c/span\u003eUIImagePickerController alloc\u003cspan style=\"color: #002200;\"\u003e\u0026#93;\u003c/span\u003e init\u003cspan style=\"color: #002200;\"\u003e\u0026#93;\u003c/span\u003e;\n    mediaUI.sourceType \u003cspan style=\"color: #002200;\"\u003e=\u003c/span\u003e UIImagePickerControllerSourceTypeCamera;\n    mediaUI.allowsEditing \u003cspan style=\"color: #002200;\"\u003e=\u003c/span\u003e \u003cspan style=\"color: #a61390;\"\u003eNO\u003c/span\u003e;\n    mediaUI.delegate \u003cspan style=\"color: #002200;\"\u003e=\u003c/span\u003e self;\n    \u003cspan style=\"color: #11740a; font-style: italic;\"\u003e// 3\u003c/span\u003e\n    \u003cspan style=\"color: #002200;\"\u003e\u0026#91;\u003c/span\u003eself presentViewController\u003cspan style=\"color: #002200;\"\u003e:\u003c/span\u003emediaUI animated\u003cspan style=\"color: #002200;\"\u003e:\u003c/span\u003e\u003cspan style=\"color: #a61390;\"\u003eYES\u003c/span\u003e completion\u003cspan style=\"color: #002200;\"\u003e:\u003c/span\u003e\u003cspan style=\"color: #a61390;\"\u003enil\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#93;\u003c/span\u003e;\n\u003cspan style=\"color: #002200;\"\u003e\u0026#125;\u003c/span\u003e\u003c/pre\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/table\u003e\n\u003c/div\u003e\n\n  1. Makes sure that the photo library is available.  If the user declines photo access, this will be the case.\n  2. Create the **UIImagePickerController** and set its source type to **UIImagePickerControllerSourceTypeCamera**.  This lets the media picker know to use the camera and not the image library.\n  3. Finally, present the view controller modally\n\nThe method to bring up the photo albums is almost identical to the method above.  Add the following code to the **albumsButtonTapped:** method.\n\n\u003cdiv class=\"wp_syntax\"\u003e\n  \u003ctable\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"code\"\u003e\n        \u003cpre class=\"objc\" style=\"font-family:monospace;\"\u003e\u003cspan style=\"color: #002200;\"\u003e-\u003c/span\u003e \u003cspan style=\"color: #002200;\"\u003e\u0026#40;\u003c/span\u003eIBAction\u003cspan style=\"color: #002200;\"\u003e\u0026#41;\u003c/span\u003ealbumsButtonTapped\u003cspan style=\"color: #002200;\"\u003e:\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#40;\u003c/span\u003e\u003cspan style=\"color: #a61390;\"\u003eid\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#41;\u003c/span\u003esender\n\u003cspan style=\"color: #002200;\"\u003e\u0026#123;\u003c/span\u003e\n    \u003cspan style=\"color: #a61390;\"\u003eif\u003c/span\u003e \u003cspan style=\"color: #002200;\"\u003e\u0026#40;\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#40;\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#91;\u003c/span\u003eUIImagePickerController isSourceTypeAvailable\u003cspan style=\"color: #002200;\"\u003e:\u003c/span\u003e\n          UIImagePickerControllerSourceTypePhotoLibrary\u003cspan style=\"color: #002200;\"\u003e\u0026#93;\u003c/span\u003e \u003cspan style=\"color: #002200;\"\u003e==\u003c/span\u003e \u003cspan style=\"color: #a61390;\"\u003eNO\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#41;\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#41;\u003c/span\u003e\n        \u003cspan style=\"color: #a61390;\"\u003ereturn\u003c/span\u003e;\n\u0026nbsp;\n    UIImagePickerController \u003cspan style=\"color: #002200;\"\u003e*\u003c/span\u003emediaUI \u003cspan style=\"color: #002200;\"\u003e=\u003c/span\u003e \u003cspan style=\"color: #002200;\"\u003e\u0026#91;\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#91;\u003c/span\u003eUIImagePickerController alloc\u003cspan style=\"color: #002200;\"\u003e\u0026#93;\u003c/span\u003e init\u003cspan style=\"color: #002200;\"\u003e\u0026#93;\u003c/span\u003e;\n    mediaUI.sourceType \u003cspan style=\"color: #002200;\"\u003e=\u003c/span\u003e UIImagePickerControllerSourceTypePhotoLibrary;    \n    mediaUI.allowsEditing \u003cspan style=\"color: #002200;\"\u003e=\u003c/span\u003e \u003cspan style=\"color: #a61390;\"\u003eNO\u003c/span\u003e;\n    mediaUI.delegate \u003cspan style=\"color: #002200;\"\u003e=\u003c/span\u003e self;\n    \u003cspan style=\"color: #002200;\"\u003e\u0026#91;\u003c/span\u003eself presentViewController\u003cspan style=\"color: #002200;\"\u003e:\u003c/span\u003emediaUI animated\u003cspan style=\"color: #002200;\"\u003e:\u003c/span\u003e\u003cspan style=\"color: #a61390;\"\u003eYES\u003c/span\u003e completion\u003cspan style=\"color: #002200;\"\u003e:\u003c/span\u003e\u003cspan style=\"color: #a61390;\"\u003enil\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#93;\u003c/span\u003e;\n\u003cspan style=\"color: #002200;\"\u003e\u0026#125;\u003c/span\u003e\u003c/pre\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/table\u003e\n\u003c/div\u003e\n\nAs I said before, this method is almost identical with the only difference being, we are using **UIImagePickerControllerSourceTypePhotoLibrary **to open up the photo albums.\n\n**Build and Run** and tap the \u0026#8220;Take Photo\u0026#8221; button. Make sure you are testing on the device at this stage or nothing will happen since the simulator doesn\u0026#8217;t have a camera.  You can however test the \u0026#8220;Albums\u0026#8221; button assuming you have some photos in your photo library.\n\nNow that you are able to pick a photo, you need to be able to access the photo that was selected or taken.  To do this implement the following delegate method for **UIImagePickerController.**\n\n\u003cdiv class=\"wp_syntax\"\u003e\n  \u003ctable\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"code\"\u003e\n        \u003cpre class=\"objc\" style=\"font-family:monospace;\"\u003e\u003cspan style=\"color: #6e371a;\"\u003e#pragma mark - image picker delegate\u003c/span\u003e\n\u0026nbsp;\n\u003cspan style=\"color: #002200;\"\u003e-\u003c/span\u003e \u003cspan style=\"color: #002200;\"\u003e\u0026#40;\u003c/span\u003e\u003cspan style=\"color: #a61390;\"\u003evoid\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#41;\u003c/span\u003e imagePickerController\u003cspan style=\"color: #002200;\"\u003e:\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#40;\u003c/span\u003eUIImagePickerController \u003cspan style=\"color: #002200;\"\u003e*\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#41;\u003c/span\u003epicker didFinishPickingMediaWithInfo\u003cspan style=\"color: #002200;\"\u003e:\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#40;\u003c/span\u003e\u003cspan style=\"color: #400080;\"\u003eNSDictionary\u003c/span\u003e \u003cspan style=\"color: #002200;\"\u003e*\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#41;\u003c/span\u003einfo\n\u003cspan style=\"color: #002200;\"\u003e\u0026#123;\u003c/span\u003e\n    UIImage \u003cspan style=\"color: #002200;\"\u003e*\u003c/span\u003eimage \u003cspan style=\"color: #002200;\"\u003e=\u003c/span\u003e \u003cspan style=\"color: #002200;\"\u003e\u0026#40;\u003c/span\u003eUIImage \u003cspan style=\"color: #002200;\"\u003e*\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#41;\u003c/span\u003e \u003cspan style=\"color: #002200;\"\u003e\u0026#91;\u003c/span\u003einfo objectForKey\u003cspan style=\"color: #002200;\"\u003e:\u003c/span\u003e\n                                          UIImagePickerControllerOriginalImage\u003cspan style=\"color: #002200;\"\u003e\u0026#93;\u003c/span\u003e;    \n    \u003cspan style=\"color: #002200;\"\u003e\u0026#91;\u003c/span\u003eself dismissViewControllerAnimated\u003cspan style=\"color: #002200;\"\u003e:\u003c/span\u003e\u003cspan style=\"color: #a61390;\"\u003eYES\u003c/span\u003e completion\u003cspan style=\"color: #002200;\"\u003e:^\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#123;\u003c/span\u003e\n        \u003cspan style=\"color: #11740a; font-style: italic;\"\u003e// Do something with the image\u003c/span\u003e\n    \u003cspan style=\"color: #002200;\"\u003e\u0026#125;\u003c/span\u003e\u003cspan style=\"color: #002200;\"\u003e\u0026#93;\u003c/span\u003e;\n\u003cspan style=\"color: #002200;\"\u003e\u0026#125;\u003c/span\u003e\u003c/pre\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/table\u003e\n\u003c/div\u003e\n\nThis method fetches the selected (or taken) image and stores. It then dismisses the camera or photo albums allowing you to do whatever is needed with the image.\n\n### 5. Next Steps\n\nBy now, you should have learned how to use the **ALAssets **library to interact with a user\u0026#8217;s photos and use them to build a custom interface. You also learned how to use a **UICollectionView** to display a grid of photos.\n\nWith this knowledge in hand, you should now be able to make much more interesting photo selection interfaces than the default one Apple has to offer.  Other apps like Google+ and Instagram both have very slick photo pickers and I hope this tutorial has your gears going thinking about other interesting photo selection interfaces.\n\nYou can download the source from this tutorial on [GitHub][15]\n\nFeel free to leave a comment if you have any questions. Happy Hacking!\n\n\u0026nbsp;\n\n\u003cdiv style=\"\"\u003e\n  \u003ca href=\"http://twitter.com/share\" class=\"twitter-share-button\" data-count=\"horizontal\" data-text=\"iPhone Programming Tutorial: Creating An Image Gallery Like Over - Part 2\" data-url=\"http://brandontreb.com/iphone-programming-tutorial-creating-an-image-gallery-like-over-part-2\"  data-via=\"brandontreb\" data-related=\"brandontreb:\"\u003eTweet\u003c/a\u003e\n\u003c/div\u003e\n\n [1]: /uploads/2013/Screen-Shot-2013-08-09-at-8.36.42-PM.png\n [2]: http://brandontreb.com/iphone-programming-tutorial-creating-an-image-gallery-like-over-part-1\n [3]: http://brandontreb.com/wp-content/uploads/2013/07/Screen-Shot-2013-07-24-at-6.43.38-PM.png\n [4]: /uploads/2013/Screen-Shot-2013-07-24-at-6.46.35-PM.png\n [5]: /uploads/2013/Screen-Shot-2013-07-24-at-6.49.51-PM.png\n [6]: /uploads/2013/Screen-Shot-2013-07-24-at-7.07.14-PM.png\n [7]: http://brandontreb.com/wp-content/uploads/2013/07/Screen-Shot-2013-07-24-at-6.52.32-PM.png\n [8]: http://brandontreb.com/wp-content/uploads/2013/07/Screen-Shot-2013-07-24-at-7.10.39-PM.png\n [9]: /uploads/2013/Screen-Shot-2013-07-25-at-12.35.06-PM.png\n [10]: /uploads/2013/Screen-Shot-2013-07-25-at-12.44.23-PM.png\n [11]: http://brandontreb.com/wp-content/uploads/2013/07/Screen-Shot-2013-07-25-at-12.40.13-PM.png\n [12]: http://brandontreb.com/wp-content/uploads/2013/07/Screen-Shot-2013-07-25-at-12.41.54-PM.png\n [13]: http://brandontreb.com/wp-content/uploads/2013/07/Screen-Shot-2013-07-25-at-12.47.26-PM.png\n [14]: http://brandontreb.com/wp-content/uploads/2013/07/Screen-Shot-2013-07-25-at-12.51.25-PM.png\n [15]: https://github.com/brandontreb/OverPicker\n",
  "permalink" : "https://brandon_swoop.ngrok.io/2013/08/15/screen-shot-2013-07-25-at-12.51.25-pm-300x221.png/",
  "date":"2013-08-15T00:00:00Z","draft":false,"iscjklanguage":false,"lastmod":"2013-08-15T00:00:00Z","post_type":"article","publishdate":"2013-08-15T00:00:00Z","slug":"iphone-programming-tutorial-creating-an-image-gallery-like-over-part-2","tags":["iPhone Programming","alassetslibrary-tutorial","iOS-programming","uicollectionview-tutorial","iPhone App Development"],"title":"iPhone Programming Tutorial: Creating An Image Gallery Like Over \u0026#8211; Part 2","type":"post"
}