{
  "name": "Installing And Deploying Rails On A Red Hat Server With Passenger",  
  "content": "[\u003cimg class=\"alignleft size-medium wp-image-347\" title=\"rails\" src=\"/uploads/2009/rails1-391x500.png\" alt=\"rails\" width=\"141\" height=\"180\" /\u003e][1]I have long been a fan of Ruby on Rails and even jumper on board very early on. The one thing that has held me back from using it in the majority of my projects is the fact that it\u0026#8217;s such a pain to configure with Apache.\n\nI know what you are saying\u0026#8230; Just switch to a more Rails friendly server. I like and know Apache. Not to mention I also host PHP apps.\n\nWith the (re)release of tagacloud, I have recently fell in love with ruby on rails again. So, I looked for a better solution for installation (last time I installed it was 3 years ago) and I stumbled upon [Passenger][2].\n\nIt was super easy to use and had my running on Rails in no time.\n\n\u003e Deployment is only a matter of uploading application files. No Ruby (on Rails)-specific server configuration required!\n\nJust to give you some background, here are some details about my server.\n\n**OS:** Linux\n\n**Distribution:** Red Hat Enterprise Linux Server release 5.3 Hosted At Server Beach\n\n**Control Panel:** Plesk 8.6\n\nAnd here are the steps I took to get Ruby on Rails up and running from scratch\n\n## 1. Install Ruby\n\n\u003cdiv\u003e\n  \u003cpre\u003e\u0026lt;code class=’bash’\u003eyum install ruby ruby-libs ruby-mode ruby-rdoc ruby-irb ruby-ri ruby-docs\u0026lt;/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\nThis will do some magic and install Ruby on your system\u0026#8230;\n\n## 2. Download And Install Ruby Gems\n\nHead on over to \u003chttp://rubygems.org/\u003e and download the latest version of Ruby Gems. Here is an example of getting the latest version as of the posting date of this article.\n\n\u003cdiv\u003e\n  \u003cpre\u003e\u0026lt;code class=’bash’\u003ewget http://rubyforge.org/frs/download.php/60718/rubygems-1.3.5.tgz\u0026lt;/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\nUntar this file\u0026#8230;\n\n\u003cdiv\u003e\n  \u003cpre\u003e\u0026lt;code class=’bash’\u003etar -xvf rubygems-1.3.5.tgz\u0026lt;/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\nNavigate to the extracted directory and run the setup script\n\n\u003cdiv\u003e\n  \u003cpre\u003e\u0026lt;code class=’bash’\u003eruby setup.rb\u0026lt;/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\n## 3. Install Rails\n\nThis will install rails. If it asks you about dependencies, just type \u0026#8220;Y\u0026#8221;\n\n\u003cdiv\u003e\n  \u003cpre\u003e\u0026lt;code class=’bash’\u003egem install rails\u0026lt;/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\n## 4. Install The Passenger Gem\n\nNow that rails has been installed, we need to install [Passenger][2]. The installation process is stupid simple. [Passenger][2] can be installed via a Ruby Gem.\n\n\u003cdiv\u003e\n  \u003cpre\u003e\u0026lt;code class=’bash’\u003egem install passenger\u0026lt;/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\nNow, it will do some stuff and and you some questions. At some point in the process, it will check to see if you have all of the dependencies. **You most likely will not**. Luckily, the geniuses who created Passenger tell you the commands to install all of the dependencies. So just follow the directions and you should be ok.\n\n## 5. Set Up Passenger For Apache\n\n\u003cdiv\u003e\n  \u003cpre\u003e\u0026lt;code class=’bash’\u003epassenger-install-apache2-module\u0026lt;/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\nIt will ask you more questions and install everything needed to run Passenger. Pay attention to the stuff spit out at the end of the process. You will take this and paste it into your httpd.conf file. For example, here is the what mine spit out:\n\n\u003cdiv\u003e\n  \u003cpre\u003e\u0026lt;code class=’bash’\u003eLoadModule passenger_module /usr/lib/ruby/gems/1.8/gems/passenger-2.2.4/ext/apache2/mod_passenger.so\nPassengerRoot /usr/lib/ruby/gems/1.8/gems/passenger-2.2.4\nPassengerRuby /usr/bin/ruby\u0026lt;/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\nYour **httpd.conf** file is probably located at /etc/httpd/conf/httpd.conf\n\nYou should now be good to go! Navigate to one of your vhosts folder (ex: tagacloud/httpdocs/) and create (or copy) a rails application.\n\n\u003cdiv\u003e\n  \u003cpre\u003e\u0026lt;code class=’bash’\u003erails someRailsApp\u0026lt;/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\nThen set permissions\u0026#8230;\n\n\u003cdiv\u003e\n  \u003cpre\u003e\u0026lt;code class=’bash’\u003echmod -R 755 someRailsApp\u0026lt;/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\nAnd then a miracle happens\u0026#8230; and viola! You (should) have a fully functional up and running. Navigate to http://domain.com/someRailsApp/public to see your app in action.\n\nIf you have any comments or questions, feel free to leave them in the comments section of this post.\n\n\u003cdiv style=\"\"\u003e\n  \u003ca href=\"http://twitter.com/share\" class=\"twitter-share-button\" data-count=\"horizontal\" data-text=\"Installing And Deploying Rails On A Red Hat Server With Passenger\" data-url=\"http://brandontreb.com/installing-and-deploying-rails-on-a-red-hat-server-with-passenger\"  data-via=\"brandontreb\" data-related=\"brandontreb:\"\u003eTweet\u003c/a\u003e\n\u003c/div\u003e\n\n [1]: http://brandontreb.com/wp-content/uploads/2009/07/rails1.png\n [2]: http://www.modrails.com/\n",
  "permalink" : "https://brandontreb.ngrok.io/2009/07/23/rails1-391x500.png/",
  "date":"2009-07-23T00:00:00Z","draft":false,"iscjklanguage":false,"lastmod":"2009-07-23T00:00:00Z","post_type":"article","publishdate":"2009-07-23T00:00:00Z","slug":"installing-and-deploying-rails-on-a-red-hat-server-with-passenger","tags":["Articles"],"title":"Installing And Deploying Rails On A Red Hat Server With Passenger","type":"post"
}