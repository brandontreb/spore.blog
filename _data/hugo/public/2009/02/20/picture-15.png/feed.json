{
  "name": "Twitter API Programming Tutorial With PHP \u0026#8211; Intro",  
  "content": "\u003ccenter\u003e\n  \u003ca href=\"/uploads/2009/picture-15.png\"\u003e\u003cimg src=\"/uploads/2009/picture-15.png\" alt=\"picture-15\" title=\u0026uuot;picture-15\" width=\"400\" height=\"125\" class=\"alignnone size-full wp-image-85\" /\u003e\u003c/a\u003e\n\u003c/center\u003e\n\n\u003cspan color=\"#000000\"\u003eI have recently started using Twitter and completely fell in love with it. Being a programming, this naturally made me want to develop applications for interfacing with it. So, I scoured the internet (checking Twitter\u0026#8217;s website as well) to find good *\u003cspan style=\"color: #ff0000;\"\u003esimple\u003c/span\u003e tutorials for doing this. After searching for a while, I couldn\u0026#8217;t really find any. Ok, I lied, I found a few but they were terrible. I hate tutorials that assume the reader knows more than they actually do. \u003c/span\u003e\n\n\u003cspan style=\"color: #000000;\"\u003eSo, I am taking it upon myself to write a series of comprehensive tutorials for interfacing with Twitter. I will first do them all in PHP and then maybe in some other languages. I may even do some in Objective-C to be implemented on the iPhone. These would be written of course at iCodeBlog.com ðŸ˜‰ .\u003c/span\u003e\n\n\u003cspan style=\"color: #ff0000;\"\u003e\u003cspan style=\"color: #000000;\"\u003eLet\u0026#8217;s just jump right in. Twitter offers a few ways to interface with their web services, which are all documented on their \u003ca href=\"http://apiwiki.twitter.com/\"\u003eAPI Wiki\u003c/a\u003e. The documentation is great, assuming you know the code to get connected and make the calls. So, let\u0026#8217;s skip all of the nerdy low level stuff and write an application.\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan style=\"color: #ff0000;\"\u003e\u003cspan style=\"color: #000000;\"\u003eToday, I will be teaching you how to simply connect to Twitter and update your status. This will be pretty straight forward and require very little PHP code. So, grab some coffee, open up your favorite PHP editor (notepad?).\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan\u003eOk, so let\u0026#8217;s start by wrapping our code into an easy to call function. We don\u0026#8217;t want to have to copy and paste our Twitter interface code every time we need it in a project. Wouldn\u0026#8217;t it be nice if we could just call it like this\u003c/span\u003e\n\n\u003cdiv\u003e\n  \u003cpre\u003e\u0026lt;code class=â€™phpâ€™\u003eupdateTwitter(\"Just Rockin Out\")\u0026lt;/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\n\u003cspan\u003eSo let\u0026#8217;s begin by declaring a function called \u003cb\u003eupdateTwitter\u003c/b\u003e. Type the following code\u003c/p\u003e \n\n\u003cdiv\u003e\n  \u003cpre\u003e\u0026lt;code class=â€™phpâ€™\u003efunction updateTwitter($status){ \n    // Twitter login information \n    $username = \"TwitterUsername\"; \n    $password = \"TwitterPassword\";\u0026lt;/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\n  \u003cspan\u003eOur function begins with a declaration of a username and password. This will be \u003ci\u003eyour\u003c/i\u003e Twitter login information. Every Twitter API call requires that you authenticate yourself. Make sure you update the code to include \u003ci\u003eyour\u003c/i\u003e username and password/\u003c/span\u003e\n\u003c/p\u003e\n\n\u003cp\u003e\n  \u003cspan\u003eNext, we will add the following code to initialize the variables needed to make our Twitter API call. Continue by adding the following code.\u003c/span\u003e\n\u003c/p\u003e\n\n\u003cdiv\u003e\n  \u003cpre\u003e\u0026lt;code class=â€™phpâ€™\u003e// The url of the update function \n    $url = â€˜http://twitter.com/statuses/update.xmlâ€™; \n    // Arguments we are posting to Twitter \n    $postargs = â€˜status=â€™.urlencode($status); \n    // Will store the response we get from Twitter \n    $responseInfo=array(); \n    // Initialize CURL \n    $ch = curl_init($url);\u0026lt;/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\n  \u003cspan\u003eOne thing I want to point out is the URL. Notice the update.xml at the end of it. This is telling the Twitter API we want to call the \u003cb\u003eupdate\u003c/b\u003e function and we expect to receive \u003cb\u003exml\u003c/b\u003e back. You could also change it to be \u003cb\u003eupdate.json\u003c/b\u003e if you want to receive json data back.\u003c/span\u003e\n\u003c/p\u003e\n\n\u003cp\u003e\n  \u003cspan\u003eThe next variable \u003cb\u003epostargs\u003c/b\u003e is simply the arguments we will pass to the update function. Since these arguments get appended to the URL, they need to be urlencoded. The \u003cb\u003eresponseInfo\u003c/b\u003e array will contain the return data from the cURL request to Twitter. Finally, we just initialize a new cURL session. cURL is just a protocol for transferring data. You can read up on it \u003ca href=\"http://en.wikipedia.org/wiki/CURL\"\u003eon Wikipedia\u003c/a\u003e if you feel so inclined.\u003c/span\u003e\n\u003c/p\u003e\n\n\u003cp\u003e\n  \u003cspan\u003eNext, we need to tell cURL to do a POST rather than a GET and pass it our argument string\u003c/span\u003e\n\u003c/p\u003e\n\n\u003cdiv\u003e\n  \u003cpre\u003e\u0026lt;code class=â€™phpâ€™\u003e// Tell CURL we are doing a POST \n    curl_setopt ($ch, CURLOPT_POST, true); \n    // Give CURL the arguments in the POST \n    curl_setopt ($ch, CURLOPT_POSTFIELDS, $postargs);\u0026lt;/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\n  \u003cspan\u003eThe next part is where the magic happens. Here is the next bit of code (I\u0026#8217;ll explain it below)\u0026#8230;\u003c/span\u003e\n\u003c/p\u003e\n\n\u003cdiv\u003e\n  \u003cpre\u003e\u0026lt;code class=â€™phpâ€™\u003e// Set the username and password in the CURL call \n    curl_setopt($ch, CURLOPT_USERPWD, $username.â€™:â€™.$password); \n    // Set some cur flags (not too important) \n    curl_setopt($ch, CURLOPT_VERBOSE, 1); \n    curl_setopt($ch, CURLOPT_NOBODY, 0); \n    curl_setopt($ch, CURLOPT_HEADER, 0); \n    curl_setopt($ch, CURLOPT_FOLLOWLOCATION,1); \n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); \n    // execute the CURL call \n    $response = curl_exec($ch); \n    // Get information about the response \n    $responseInfo=curl_getinfo($ch); \n    // Close the CURL connection curl_close($ch);\u0026lt;/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\n  \u003cspan\u003eWow! that looks like a lot of nerdy code. Good thing you only have to write it once and don\u0026#8217;t have to understand it (unless you want to). The first line sets the username and password fields in our cURL call. When we first connect with the Twitter API, it will prompt for a username and password. cURL will automatically feed the username and password to the API. \u003c/span\u003e \u003cspan\u003eThe next few lines are not super important. If you one of those people that get hung up on that sort of thing, you can read about them \u003ca href=\"http://us.php.net/curl\"\u003ehere\u003c/a\u003e. We\u0026#8217;re almost done, I promise\u0026#8230;\u003c/span\u003e \u003cspan\u003eFinally, we make the cURL call itself by calling curl_exec. This will return a response \u003cb\u003efrom Twitter\u003c/b\u003e which will contains some XML if your call completed successfully. The next line, gets the http response (makes sure you were able to connect to Twitter). If it is anything other than 200 (HTTP OK), it means your cURL request never even reached Twitter.\u003c/span\u003e \u003cspan\u003eHere is the last bit of code\u003c/span\u003e\n\u003c/p\u003e\n\n\u003cdiv\u003e\n  \u003cpre\u003e\u0026lt;code class=â€™phpâ€™\u003e// Make sure we received a response from Twitter \n    if(intval($responseInfo[â€˜http_codeâ€™])==200){ \n        // Display the response from Twitter \n        echo $response; \n    }else{ \n        // Something went wrong \n        echo \"Error: \" . $responseInfo[â€˜http_codeâ€™]; \n    } \n} \n?\u0026gt;\u0026lt;/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\n  \u003cspan\u003eAll this code really does is makes sure we got a 200 code (successfully reached Twitter). If so, it prints out the XML that Twitter returned to us. \u003c/span\u003e \u003cspan\u003eNow you have a handy-dandy function you can call whenever we want to update your Twitter status from your website. Simply type\u003c/span\u003e\n\u003c/p\u003e\n\n\u003cdiv\u003e\n  \u003cpre\u003e\u0026lt;code class=â€™phpâ€™\u003eupdateTwitter(\"Just finished a sweet tutorial on http://brandontreb.com\")\u0026lt;/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\n  \u003cspan\u003eand like magic, your Twitter status will be updated. This has many different uses as you can imagine. Join me next time when I will be putting this code into a PHP class as well as implementing the rest of the Twitter API functions. We will then be able to use this Twitter class in a variety of PHP applications. So , be sure to \u003ca href=\"http://feeds2.feedburner.com/brandontreb\"\u003esubscribe to my RSS feed\u003c/a\u003e and feel free to ask me any questions in the comments section of this post. You can also download the source code of this tutorial here\u0026#8230; (insert clever tag line here (iCodeBlog\u0026#8217;s is happy iCoding, I need a new one)). \u003c/span\u003e\n\u003c/p\u003e\n\n\u003cdiv style=\"\"\u003e\n  \u003ca href=\"http://twitter.com/share\" class=\"twitter-share-button\" data-count=\"horizontal\" data-text=\"Twitter API Programming Tutorial With PHP - Intro\" data-url=\"http://brandontreb.com/twitter-api-programming-tutorial-with-php-intro\"  data-via=\"brandontreb\" data-related=\"brandontreb:\"\u003eTweet\u003c/a\u003e\n\u003c/div\u003e\n",
  "permalink" : "https://brandontreb.ngrok.io/2009/02/20/picture-15.png/",
  "date":"2009-02-20T00:00:00Z","draft":false,"iscjklanguage":false,"lastmod":"2009-02-20T00:00:00Z","post_type":"article","publishdate":"2009-02-20T00:00:00Z","slug":"twitter-api-programming-tutorial-with-php-intro","tags":["Articles"],"title":"Twitter API Programming Tutorial With PHP \u0026#8211; Intro","type":"post"
}